{"version":3,"file":"static/js/401.c2c81f33.chunk.js","mappings":"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","sources":["components/ContactForm/initialState.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/PhoneBook/PhoneBook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n};\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"wrapperContacts\":\"ContactForm_wrapperContacts__CEPHJ\",\"contactFormBlock\":\"ContactForm_contactFormBlock__XJFtZ\",\"conactFormGroup\":\"ContactForm_conactFormGroup__wbR0V\",\"title\":\"ContactForm_title__jZguf\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btnAddContact\":\"ContactForm_btnAddContact__AepU1\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  fetchAddContact,\n} from 'redux/contacts/contacts-operations';\n\nimport initialState from './initialState';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(fetchAddContact({ name, number }));\n\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n  return (\n    <div className={css.wrapper}>\n      <div className={css.contactFormBlock}>\n        <form className=\"\" onSubmit={handleSubmit}>\n          <div className={css.conactFormGroup}>\n            <label className={css.label}>Name</label>\n            <input\n              className={css.input}\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </div>\n          <div className={css.conactFormGroup}>\n            <label className={css.label}>Number</label>\n            <input\n              className={css.input}\n              value={number}\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </div>\n          <button className={css.btnAddContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;","export const getFilter = ({ filter }) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"conactFormGroup\":\"Filter_conactFormGroup__vb5s5\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <div className={css.conactFormGroup}>\n      <label className={css.label}>Find contacts by name</label>\n      <input\n        className={css.input}\n        value={filter}\n        onChange={handleFilter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nexport const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getAllContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n      );\n    });\n    return result;\n  }\n);","// extracted by mini-css-extract-plugin\nexport default {\"btnDeleteContact\":\"ContactItem_btnDeleteContact__qOFx1\",\"listItems\":\"ContactItem_listItems__r3-QR\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\nimport Grid from '@mui/material/Grid';\n\nimport css from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.listItems}>\n      {name}: {number}\n      <Grid item xs={8}>\n        <DeleteTwoToneIcon\n          className={css.btnDeleteContact}\n          onClick={() => dispatch(fetchDeleteContact(id))}\n          type=\"button\"\n        />\n      </Grid>\n      \n    </li>\n  );\n};\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n};","// extracted by mini-css-extract-plugin\nexport default {\"listContact\":\"ContactList_listContact__gg2c1\"};","import { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  return (\n    <ul className={css.listContact}>\n      {\n        // mapаємо відфільтровані контакти\n        filteredContacts.map(({ id, name, number }) => {\n          return <ContactItem id={id} key={id} name={name} number={number} />;\n        })\n      }\n    </ul>\n  );\n};\n\nexport default ContactList;\n\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { useSelector } from 'react-redux';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from '../ContactForm/ContactForm.module.css';\n\nconst PhoneBook = () => {\n  const isContacts = Boolean(useSelector(getFilteredContacts).length);\n  return (\n    <>\n      <div className={css.wrapperContacts}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {isContacts && <ContactList />}\n        {!isContacts && <p>No contacts in list</p>}\n      </div>\n    </>\n  );\n};\nexport default PhoneBook;","import PhoneBook from '../../components/PhoneBook/PhoneBook';\nconst ContactsPage = () => {\n  return <PhoneBook />;\n};\nexport default ContactsPage;"],"names":["name","number","useState","initialState","state","setState","dispatch","useDispatch","useEffect","fetchContacts","handleChange","target","value","prevState","className","css","onSubmit","e","preventDefault","fetchAddContact","onChange","type","pattern","title","required","getFilter","filter","useSelector","setFilter","getFilteredContacts","createSelector","contacts","items","normalizedFilter","toLowerCase","includes","id","Grid","item","xs","DeleteTwoTone","onClick","fetchDeleteContact","ContactList","filteredContacts","map","defaultProps","isContacts","Boolean","length"],"sourceRoot":""}